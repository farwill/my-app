{"version":3,"sources":["index.js"],"names":["Square","props","className","concat","highlight","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","onClick","value","Board","i","_this","this","line","includes","squares","_this2","rows","Array","fill","cells","position","rowsWrap","map","row","cellsWrap","cell","j","key","renderSquare","React","Component","Game","_this3","Object","C_Users_Jack_Projects_my_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","C_Users_Jack_Projects_my_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","C_Users_Jack_Projects_my_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","state","history","stepNumber","xIsNext","ascending","slice","length","calculateWinner","setState","step","status","_this4","current","winner_line","winner","moves","move","col","Math","floor","desc","jumpTo","handleClick","toggle","reverse","lines","_lines$i","C_Users_Jack_Projects_my_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","b","c","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1453c244.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props) {\n  const className = `square ${props.highlight}`;\n  return (\n    <button className={className} onClick={props.onClick}>\n      {props.value}\n    </button>\n  );\n}\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    const line = this.props.line;\n    const highlight = (line && line.includes(i)) ? 'square-highlight' : '';\n    return (\n      <Square\n        value={this.props.squares[i]}\n        highlight={highlight}\n        onClick={() => this.props.onClick(i)}\n      />\n    );\n  }\n\n  render() {\n    const rows = Array(3).fill(null);\n    const cells = rows;\n    let position = 0;\n    const rowsWrap = rows.map((row, i) => {\n      const cellsWrap = cells.map((cell, j) => {\n        // const position = (rows.length * i) + j;\n        return (\n          <span key={position}>{this.renderSquare(position++)}</span>\n        );\n      });\n      return (\n        <div className=\"board-row\" key={i}>{cellsWrap}</div>\n      );\n    });\n    return (\n      <div>\n        {rowsWrap}\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null),\n        position: null,\n      }],\n      stepNumber: 0,\n      xIsNext: true,\n      ascending: true,\n    };\n  }\n  \n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      history: history.concat([\n        {\n          squares: squares,\n          position: i,\n        }\n      ]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext,\n    });\n  }\n  \n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: (step % 2) === 0,\n    });\n  }\n  \n  toggle() {\n    this.setState({\n      ascending: !this.state.ascending,\n    });\n  }\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner_line = calculateWinner(current.squares);\n    const winner = winner_line ? winner_line.winner : null;\n    const line = winner_line ? winner_line.line : null;\n    const moves = history.map((step, move) => {\n      const position = step.position\n      const col = position % 3 + 1;\n      const row = Math.floor(position / 3 + 1);\n      const desc = move ?\n        'Go to move # ' + move + ' (' + col + ',' + row + ')':\n        'Go to game start';\n      return (\n        <li key={move}>\n          <button\n            className={this.state.stepNumber === move ? 'btn-bold' : ''}\n            onClick={() => this.jumpTo(move)}\n          >\n            {desc}\n          </button>\n        </li>\n      );\n    })\n    let status;\n    if (winner) {\n      status = 'Winner: ' + winner;\n    } else if (this.state.stepNumber === 9) {\n      status = 'No Winner!';\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n    \n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board\n            squares={current.squares}\n            line={line}\n            onClick={(i) => this.handleClick(i)}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <button onClick={() => this.toggle()}>change order</button>\n          <ol>{this.state.ascending ? moves : moves.reverse()}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return {\n        winner: squares[a],\n        line: [a, b, c],\n      }\n    }\n  }\n  return null;\n}\n"],"sourceRoot":""}